#ifndef BINARYTREE_H
#define BINARYTREE_H
#include<iostream>

////////////////////////////////////////////////////////////////////////////////////////
//DECLARATIONS
////////////////////////////////////////////////////////////////////////////////////////
template<class T>
struct TreeNode{
    TreeNode();
    TreeNode(const T& value);
    T data;
    TreeNode* left;
    TreeNode* right;
};

////////////////////////////////////////////////////////////////////////////////////////
// DEFINITIONS
////////////////////////////////////////////////////////////////////////////////////////
template<class T>
class BinaryTree{
public:
    BinaryTree();
private:
    TreeNode<T>* root;
};

template<class T>
TreeNode<T>::TreeNode(){
    left = nullptr;
    right = nullptr;
}

#endif // BINARYTREE_H
